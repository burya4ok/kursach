{"version":3,"file":"lectures.component.js","sourceRoot":"","sources":["lectures.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqD,eAAe,CAAC,CAAA;AACrE,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,8BAA2B,8BAA8B,CAAC,CAAA;AAC1D,iCAA8B,iCAAiC,CAAC,CAAA;AAChE,iCAA2B,2BAA2B,CAAC,CAAA;AAGvD;IACE,kBAAoB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAC/C,4BAAS,GAAT,UAAU,GAAG;QACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC;IAC5D,CAAC;IALH;QAAC,WAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;gBAAA;IAMvB,eAAC;AAAD,CAAC,AALD,IAKC;AALY,gBAAQ,WAKpB,CAAA;AAQD;IAIE,kCAAoB,YAA0B,EAAU,eAAgC;QAApE,iBAAY,GAAZ,YAAY,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAiB;QACtF,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,mBAAmB,EAAE,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,6CAAU,GAAV,UAAW,OAAY;QACrB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACzG,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAtBH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;SAExC,CAAC;;gCAAA;IAkBF,+BAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,gCAAwB,2BAiBpC,CAAA","sourcesContent":["import {Component, OnInit, Pipe, PipeTransform} from '@angular/core';\nimport * as path from 'path';\nimport { remote, ipcRenderer } from 'electron';\nimport {LoginService} from \"../../services/login.service\";\nimport {LecturesService} from \"../../services/lectures.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n@Component({\n  selector: 'app-lectures',\n  templateUrl: './lectures.component.html',\n  styleUrls: ['./lectures.component.css'],\n\n})\nexport class StudentLecturesComponent implements OnInit {\n  win: Electron.BrowserWindow;\n  lectures: any[];\n  currentLecture: any;\n  constructor(private loginService: LoginService, private lecturesService: LecturesService) {\n    this.lectures = lecturesService.getPartLecturesInfo();\n    this.setLecture(this.lectures[0]);\n  }\n\n  setLecture(lecture: any) {\n    this.currentLecture = lecture;\n    this.currentLecture.viewerPath = path.normalize(path.join('./pdfjs/viewer.html?file=' + lecture.path));\n  }\n\n  ngOnInit() {\n    this.loginService.setTitle('Лекції');\n  }\n}\n"]}