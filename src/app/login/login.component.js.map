{"version":3,"file":"login.component.js","sourceRoot":"","sources":["login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router'\r\n\r\nimport {ipcRenderer, remote} from 'electron';\r\nimport {LoginService} from \"../services/login.service\";\r\nimport {SubjectService} from \"../services/subject.service\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css'],\r\n    providers: [LoginService, SubjectService],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    win: Electron.BrowserWindow;\r\n    teacher: boolean;\r\n    student: boolean;\r\n    placeholder: string;\r\n    password: string;\r\n    subject: any;\r\n\r\n    constructor(private router: Router, private loginService: LoginService,\r\n                private subjectService: SubjectService) {\r\n        this.student = false;\r\n        this.teacher = false;\r\n        this.placeholder = 'Пароль';\r\n        this.password = '';\r\n        this.subject = this.subjectService.subject;\r\n    }\r\n\r\n    toStudent = () => {\r\n        this.student = true;\r\n        this.teacher = false;\r\n    };\r\n\r\n    toTeacher = () => {\r\n        this.teacher = true;\r\n        this.student = false;\r\n    };\r\n\r\n    login = () => {\r\n        if (this.student || this.teacher) {\r\n            this.win = remote.getCurrentWindow();\r\n            if (this.student) {\r\n                this.openMainWindow('student')\r\n            }\r\n            else if (this.teacher) {\r\n                this.openMainWindow('teacher')\r\n            }\r\n        }\r\n    };\r\n\r\n    private openMainWindow = (type: string) => {\r\n        this.loginService.setTypeOfUser(type);\r\n        let checkPassword = this.loginService.checkPassword(type, this.password);\r\n        if (checkPassword) {\r\n            this.win.hide();\r\n            ipcRenderer.send('mainWindow');\r\n        } else {\r\n            this.password = '';\r\n            this.placeholder = 'Введіть вірний пароль'\r\n        }\r\n    };\r\n\r\n    ngOnInit() {\r\n        let type = this.loginService.getTypeOfUser();\r\n        if (type === 'student') {\r\n            this.router.navigate(['student']);\r\n        } else if (type === 'teacher') {\r\n            this.router.navigate(['teacher']);\r\n        }\r\n    }\r\n\r\n}\r\n"]}