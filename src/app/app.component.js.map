{"version":3,"file":"app.component.js","sourceRoot":"","sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAmD,eAAe,CAAC,CAAA;AACnE,8BAA2B,0BAA0B,CAAC,CAAA;AACtD,yBAA0B,UAAU,CAAC,CAAA;AACrC,uBAAsB,iBAAiB,CAAC,CAAA;AAQxC;IAGI,sBAAoB,YAA0B,EAAU,MAAc;QAH1E,iBA8BC;QA3BuB,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,GAAG;YACxB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;QAEC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACrC,WAAW,CAAC;YACR,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC9C,CAAC,EAAE,GAAG,CAAC,CAAC;IAAA,CAAC;IAEb,2BAAI,GAAJ;QACI,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QACrC,sBAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IACnC,CAAC;IAED,+BAAQ,GAAR;QACI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjD,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,gCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAA;IACxC,CAAC;IAED,gCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAA;IACxC,CAAC;IAnCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACxC,CAAC;;oBAAA;IA+BF,mBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,oBAAY,eA8BxB,CAAA","sourcesContent":["import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {LoginService} from \"./services/login.service\";\r\nimport {ipcRenderer} from 'electron';\r\nimport {Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent {\r\n    title: string;\r\n    typeOfUser: string;\r\n    constructor(private loginService: LoginService, private router: Router) {\r\n        router.events.subscribe((val) => {\r\n            this.typeOfUser = this.loginService.getTypeOfUser();\r\n        });\r\n\r\n            this.loginService = loginService;\r\n        setInterval(() => {\r\n            this.title = this.loginService.getTitle();\r\n        }, 100);}\r\n\r\n    exit() {\r\n        this.loginService.deleteTypeOfUser();\r\n        ipcRenderer.send('loginWindow')\r\n    }\r\n\r\n    isActive() {\r\n        return window.location.pathname.indexOf('login') > -1 ||\r\n            window.location.pathname.indexOf('testingPage') > -1;\r\n    }\r\n\r\n    isTeacher() {\r\n        return this.typeOfUser === 'teacher'\r\n    }\r\n\r\n    isStudent() {\r\n        return this.typeOfUser === 'student'\r\n    }\r\n}\r\n"]}