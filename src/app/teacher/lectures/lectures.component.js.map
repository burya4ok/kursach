{"version":3,"file":"lectures.component.js","sourceRoot":"","sources":["lectures.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FileUploader} from 'ng2-file-upload/ng2-file-upload';\nimport {remote, ipcRenderer} from 'electron';\nimport {LoginService} from \"../../services/login.service\";\nimport {LecturesService} from \"../../services/lectures.service\";\n\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\n\n@Component({\n    selector: 'app-lectures',\n    templateUrl: './lectures.component.html',\n    styleUrls: ['./lectures.component.css'],\n\n})\nexport class TeacherLecturesComponent implements OnInit {\n    win: Electron.BrowserWindow;\n    lectures: any;\n    file: any;\n    public uploader: FileUploader = new FileUploader({isHTML5: true});\n    public hasBaseDropZoneOver: boolean = false;\n\n    public fileOverBase(e: any): void {\n        this.hasBaseDropZoneOver = e;\n    }\n\n    constructor(private loginService: LoginService, private lecturesService: LecturesService) {\n        this.lectures = this.lecturesService.getFullLecturesInfo();\n        this.uploader.addToQueue(this.lectures);\n        this.uploader.queue.forEach((item: any, index: number) => {\n            if (item._file.path === this.lectures[index].path) {\n                item.index = index;\n                item.isSuccess = true;\n                item.isUploaded = true;\n                item.progress = 100;\n            }\n        });\n\n        this.uploader.onAfterAddingFile = (file: any) => {\n            console.log(file);\n        };\n\n        this.uploader.uploadItem = (item: any) => {\n            let index = this.uploader.queue.indexOf(item);\n            let isAdded = this.lecturesService.addLecture(\n                {\n                    path: item._file.path,\n                    name: item._file.path.replace(/.*[\\/|\\\\](.*)\\..*/g, '$1')\n                });\n            if (isAdded) {\n                this.uploader.queue[index].isReady = false;\n                this.uploader.queue[index].isUploading = false;\n                this.uploader.queue[index].isSuccess = true;\n                this.uploader.queue[index].isUploaded = true;\n                this.uploader.queue[index].progress = 100;\n\n            } else {\n                this.uploader.queue[item.index].isError = true;\n            }\n        };\n    }\n\n    removeLecture = (item: any) => {\n        this.uploader.removeFromQueue(item);\n        this.lecturesService.removeLecture(item._file.id);\n    };\n\n    ngOnInit() {\n        this.loginService.setTitle('Лекції');\n    }\n}\n"]}